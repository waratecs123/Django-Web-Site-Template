# Generated by Django 5.2.5 on 2025-08-23 00:43

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('level', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('backstory', models.TextField(max_length=5000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('VN', 'Воины'), ('MG', 'Маги'), ('UC', 'Ученые'), ('RZ', 'Разведчивы'), ('RM', 'Ремесленники'), ('LD', 'Лидеры'), ('ZM', 'Земледельцы')], default='VN', max_length=2)),
                ('description', models.TextField(default='Не задано', max_length=3000)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('MC', 'Меч'), ('KZ', 'Кинжал'), ('TR', 'Топор'), ('ML', 'Молот'), ('KP', 'Копье'), ('AL', 'Алебарда'), ('LK', 'Лук'), ('AR', 'Арбалет'), ('PS', 'Посох'), ('KC', 'Кольчуга'), ('LD', 'Латные доспехи'), ('ND', 'Нагрудник'), ('SH', 'Шлем'), ('CH', 'Щит'), ('NR', 'Наручи'), ('EP', 'Эльфийский плащ'), ('ZZ', 'Целебное зелье'), ('LT', 'Лечебная трава'), ('YD', 'Яд'), ('KL', 'Ключ'), ('KR', 'Карта'), ('PL', 'Послание'), ('TK', 'Токен'), ('SV', 'Символ власти'), ('PR', 'Предмет для ритуала'), ('KV', 'Кольцо Власти'), ('LO', 'Легендарное оружие'), ('SL', 'Сильмарилл'), ('PP', 'Палантир')], default='PP', max_length=2)),
                ('description', models.TextField(default='Не задано', max_length=3000)),
            ],
        ),
        migrations.CreateModel(
            name='Race',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('EL', 'Эльфы'), ('LD', 'Люди'), ('GN', 'Гномы'), ('OR', 'Орки'), ('AN', 'Энты'), ('TR', 'Тролли')], default='EL', max_length=2)),
                ('description', models.TextField(default='Не задано', max_length=3000)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('VM', 'Владение Мечом'), ('VT', 'Владение Топором'), ('VK', 'Владение Копьем'), ('VL', 'Владение Луком'), ('VH', 'Владение Щитом'), ('VS', 'Верховая Стрельба'), ('KB', 'Конный Бой'), ('PP', 'Поединок'), ('OD', 'Осадное дело'), ('SN', 'Свет Нуменора'), ('VV', 'Внушение'), ('ZT', 'Защита от Тьмы'), ('SG', 'Свет Галадриэль'), ('ZD', 'Заклинание Дверей'), ('CH', 'Чернокнижие'), ('OO', 'Обличение'), ('BP', 'Бесшумное Передвижение'), ('MM', 'Маскировка'), ('VC', 'Выслеживание'), ('OM', 'Ориентация на Местности'), ('VD', 'Выживание в Дикой Природе'), ('SS', 'Скрытность'), ('ZY', 'Знание Языков'), ('ZI', 'Знание Древней Истории'), ('KD', 'Кузнечное дело'), ('CC', 'Целительство'), ('TT', 'Травничество'), ('PS', 'Песнь и Слово'), ('KK', 'Кораблестроение'), ('VO', 'Вдохновляющее Лидерство'), ('DD', 'Дипломатия'), ('TS', 'Тактика и Стратегия'), ('MZ', 'Мужество'), ('CI', 'Сопротивление Искушению Властью')], default='CI', max_length=2)),
                ('description', models.TextField(default='Не задано', max_length=3000)),
            ],
        ),
        migrations.CreateModel(
            name='Spell',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('ZS', 'Заклинания Света и Защиты'), ('ZO', 'Заклинания Огня и Разрушения'), ('ZV', 'Заклинания Воды и Природы'), ('ZR', 'Заклинания Разума и Иллюзий'), ('TM', 'Темная Магия и Некромантия'), ('MS', 'Магия Сотворения и Искусства')], default='ZS', max_length=2)),
                ('description', models.TextField(default='Не задано', max_length=3000)),
                ('mana_cost', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('level_required', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('OR', 'Оружие'), ('BR', 'Броня'), ('ZL', 'Зелья'), ('RS', 'Растения'), ('KP', 'Квестовые предметы'), ('AR', 'Артефакты')], default='AR', max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strength', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('dexterity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('constitution', models.CharField(choices=[('NT', 'Нормостенический тип'), ('GT', 'Гиперстенический тип'), ('AT', 'Астенический тип')], default='AT', max_length=2)),
                ('intelligence', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('wisdom', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('charisma', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('character', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='rpg_maker_app.character')),
            ],
        ),
        migrations.AddField(
            model_name='character',
            name='character_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg_maker_app.class'),
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('is_equipped', models.BooleanField(default=False)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg_maker_app.character')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg_maker_app.item')),
            ],
        ),
        migrations.AddField(
            model_name='character',
            name='race',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg_maker_app.race'),
        ),
        migrations.AddField(
            model_name='character',
            name='skill',
            field=models.ManyToManyField(to='rpg_maker_app.skill'),
        ),
        migrations.AddField(
            model_name='character',
            name='spell',
            field=models.ManyToManyField(to='rpg_maker_app.spell'),
        ),
        migrations.AddField(
            model_name='item',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rpg_maker_app.type'),
        ),
    ]
